pipeline {
    agent any
    
    environment {
        // Define environment variables for credentials and image names
        DOCKER_IMAGE = 'myimage'
        GITHUB_REPO = 'https://github.com/SelimRiahi/test-jenk'
        DOCKER_REGISTRY = 'docker.io'
        DOCKER_CREDENTIALS = 'dockerhub-credentials'  // Replace with your Jenkins DockerHub credentials ID
        GITHUB_CREDENTIALS = 'github-token'  // Replace with your GitHub credentials ID
    }
    
    stages {
        stage('Checkout GitHub Repo') {
            steps {
                script {
                    // Checkout GitHub repository
                    checkout scm
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                dir('test') {
                    // Build Docker image using bat command for Windows
                    bat 'docker build -t ${DOCKER_REGISTRY}/${DOCKER_IMAGE} .'
                }
            }
        }

        stage('Push Docker Image') {
            steps {
                script {
                    // Log in to DockerHub using credentials
                    withCredentials([usernamePassword(credentialsId: "${DOCKER_CREDENTIALS}", usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
                        bat """
                            echo ${DOCKER_PASS} | docker login -u ${DOCKER_USER} --password-stdin
                        """
                    }
                    
                    // Push Docker image to DockerHub
                    bat 'docker push ${DOCKER_REGISTRY}/${DOCKER_IMAGE}'
                }
            }
        }

        stage('Clean Up') {
            steps {
                // Clean up Docker images to save space
                bat 'docker system prune -f'
            }
        }
    }
    
    post {
        always {
            // Archive the build logs or other artifacts if necessary
            archiveArtifacts allowEmptyArchive: true, artifacts: '**/*.log'
            cleanWs()  // Clean workspace after build
        }
    }
}
