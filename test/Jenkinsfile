pipeline {
    agent any

    environment {
        DOCKERHUB_CREDENTIALS = credentials('dockerhub-credentials')
        NEXUS_CREDENTIALS = credentials('nexus-credentials')
        GITHUB_CREDENTIALS = credentials('github-token')
    }

    stages {
        stage('Clone Repository') {
            steps {
                git branch: 'main', credentialsId: 'github-token', url: 'https://github.com/SelimRiahi/test-jenk.git'
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    dir('test') {
                        bat 'docker build -t selimrh125/static-api:latest .'
                        bat 'docker tag selimrh125/static-api:latest localhost:8051/docker-hosted/selimrh125/static-api:latest'
                    }
                }
            }
        }

        stage('Push Docker Image to Docker Hub') {
            steps {
                script {
                    docker.withRegistry('https://index.docker.io/v1/', 'dockerhub-credentials') {
                        bat 'docker push selimrh125/static-api:latest'
                    }
                }
            }
        }

        stage('Push Docker Image to Nexus') {
            steps {
                script {
                    // Log in to Nexus Docker registry
                    bat "docker login -u ${NEXUS_CREDENTIALS_USR} -p ${NEXUS_CREDENTIALS_PSW} localhost:8051"

                    // Push the image to Nexus
                    bat 'docker push localhost:8051/docker-hosted/selimrh125/static-api:latest'
                }
            }
        }

        stage('Stop and Remove Previous Container') {
            steps {
                script {
                    // Stop and remove the container if it exists
                    catchError(buildResult: 'SUCCESS', stageResult: 'SUCCESS') {
                        bat '''
                            docker stop static-api || echo "Container does not exist"
                            docker rm static-api || echo "Container does not exist"
                        '''
                    }
                }
            }
        }

        stage('Run Docker Container') {
            steps {
                script {
                    bat 'docker run -d -p 3000:3000 --name static-api localhost:8051/docker-hosted/selimrh125/static-api:latest'
                }
            }
        }
    }
}
